{"version":3,"sources":["components/MovieList.js","components/MovieCard.js","App.js","serviceWorker.js","index.js"],"names":["MovieList","props","movies","map","el","id","key","Title","src","Image","width","height","style","Descr","fontWeight","Rating","MovieCard","useState","list","setList","show","setShow","handleClose","searchlist","setSearchlist","empty","setEmpty","searchRate","setSearchRate","starClicked","setStarClicked","searchStar","e","tab2","x","target","value","console","log","filter","placeholder","className","onChange","tab","toLowerCase","includes","length","marginLeft","marginTop","type","onClick","Button","variant","Modal","onHide","Header","closeButton","Body","Footer","nouv","Object","assign","document","getElementById","App","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","navigator","serviceWorker","ready","then","registration","unregister","catch","error","message"],"mappings":"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","file":"static/js/main.9db47796.chunk.js","sourcesContent":["import React from 'react';\r\n\r\nconst MovieList = (props) => {\r\n    return (<div>{props.movies.map((el, id) =>\r\n        <div key={id}>\r\n            <h1>{el.Title}</h1>\r\n            <img src={el.Image} width=\"300px\" height=\"350px\" />\r\n            <p style={{ width: \"300px\" }}>{el.Descr}</p>\r\n            <img src=\"https://upload.wikimedia.org/wikipedia/commons/thumb/6/63/Star%2A.svg/1117px-Star%2A.svg.png\" height=\"20px\" />  <span style={{ fontWeight: 800 }}>{el.Rating}</span>\r\n        </div>\r\n\r\n    )}\r\n\r\n    </div>);\r\n}\r\n\r\nexport default MovieList;","import React, { useState } from 'react';\r\nimport MovieList from './MovieList';\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\nimport { Button, Modal } from 'react-bootstrap';\r\n\r\nconst MovieCard = () => {\r\n\r\n\r\n    const [list, setList] = useState([\r\n        {\r\n            Title: \"The Godfather \",\r\n            Image: \"https://m.media-amazon.com/images/M/MV5BM2MyNjYxNmUtYTAwNi00MTYxLWJmNWYtYzZlODY3ZTk3OTFlXkEyXkFqcGdeQXVyNzkwMjQ5NzM@._V1_UY209_CR3,0,140,209_AL_.jpg\",\r\n            Descr: \"The aging patriarch of an organized crime dynasty transfers control of his clandestine empire to his reluctant son.\",\r\n            Rating: \"4\",\r\n        },\r\n        {\r\n            Title: \"The Shawshank Redemption \",\r\n            Image: \"https://m.media-amazon.com/images/M/MV5BMDFkYTc0MGEtZmNhMC00ZDIzLWFmNTEtODM1ZmRlYWMwMWFmXkEyXkFqcGdeQXVyMTMxODk2OTU@._V1_UY209_CR0,0,140,209_AL_.jpg\",\r\n            Descr: \"The aging patriarch of an organized crime dynasty transfers control of his clandestine empire to his reluctant son.\",\r\n            Rating: \"5\",\r\n        },\r\n        {\r\n            Title: \"Schindler's List \",\r\n            Image: \"https://m.media-amazon.com/images/M/MV5BNDE4OTMxMTctNmRhYy00NWE2LTg3YzItYTk3M2UwOTU5Njg4XkEyXkFqcGdeQXVyNjU0OTQ0OTY@._V1_UX140_CR0,0,140,209_AL_.jpg\",\r\n            Descr: \"The aging patriarch of an organized crime dynasty transfers control of his clandestine empire to his reluctant son.\",\r\n            Rating: \"3\",\r\n        },\r\n        {\r\n            Title: \"Raging Bull \",\r\n            Image: \"https://m.media-amazon.com/images/M/MV5BYjRmODkzNDItMTNhNi00YjJlLTg0ZjAtODlhZTM0YzgzYThlXkEyXkFqcGdeQXVyNzQ1ODk3MTQ@._V1_UY209_CR1,0,140,209_AL_.jpg\",\r\n            Descr: \"The aging patriarch of an organized crime dynasty transfers control of his clandestine empire to his reluctant son.\",\r\n            Rating: \"4\",\r\n        },\r\n        {\r\n            Title: \"Casablanca\",\r\n            Image: \"https://m.media-amazon.com/images/M/MV5BY2IzZGY2YmEtYzljNS00NTM5LTgwMzUtMzM1NjQ4NGI0OTk0XkEyXkFqcGdeQXVyNDYyMDk5MTU@._V1_UX140_CR0,0,140,209_AL_.jpg\",\r\n            Descr: \"The aging patriarch of an organized crime dynasty transfers control of his clandestine empire to his reluctant son.\",\r\n            Rating: \"5\",\r\n        }\r\n    ])\r\n\r\n    const [show, setShow] = useState(false);\r\n\r\n    const handleClose = () => setShow(false);\r\n    const handleShow = () => setShow(true);\r\n\r\n    // teb3in el Modal \r\n\r\n    const [searchlist, setSearchlist] = useState(list)\r\n    const [empty, setEmpty] = useState(true)\r\n\r\n    // teb3in el search bar\r\n\r\n    const [searchRate, setSearchRate] = useState(list)\r\n    const [starClicked, setStarClicked] = useState(false)\r\n\r\n    // teb3in les Ã©toiles\r\n\r\n\r\n    const AddMovie = () => {\r\n        let nouv = {}\r\n\r\n        Object.assign(nouv, {\r\n            Title: document.getElementById(\"newTitle\").value,\r\n            Image: document.getElementById(\"newImage\").value,\r\n            Descr: document.getElementById(\"newDescr\").value,\r\n            Rating: document.getElementById(\"newRating\").value\r\n        })\r\n\r\n\r\n        setList([...list, nouv])\r\n\r\n    }\r\n\r\n\r\n    const search = (e) => {\r\n\r\n        let tab = []\r\n\r\n        if (!starClicked)\r\n            tab = searchRate.filter(el => el.Title.toLowerCase().includes(e.target.value.toLowerCase()))\r\n        else\r\n            tab = list.filter(el => el.Title.toLowerCase().includes(e.target.value.toLowerCase()))\r\n\r\n        setSearchlist(tab)\r\n\r\n        if (e.target.value.length > 0) setEmpty(false)\r\n        else setEmpty(true)\r\n\r\n\r\n    }\r\n\r\n\r\n    const searchStar = (e) => {\r\n\r\n        let tab2 = []\r\n        let x = e.target.value\r\n        console.log(x)\r\n\r\n        if (!empty)\r\n            tab2 = searchlist.filter(el => el.Rating === x)\r\n        else\r\n            tab2 = list.filter(el => el.Rating === x)\r\n\r\n        setSearchRate(tab2)\r\n\r\n        setStarClicked(true)\r\n    }\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n    return (<div>\r\n\r\n        <input placeholder=\"search by movie title ...\" className=\"searchbar\" onChange={search} />\r\n\r\n        <table style={{ marginLeft: 100, marginTop: \"-70px\" }}>\r\n            <tr>\r\n                <td><input\r\n                    value=\"1\"\r\n                    type=\"image\"\r\n                    src=\"https://cdn3.iconfinder.com/data/icons/sympletts-free-sampler/128/star-512.png\"\r\n                    height=\"30px\"\r\n                    onClick={searchStar}\r\n\r\n                /></td>\r\n                <td><input\r\n                    value=\"2\"\r\n                    type=\"image\"\r\n                    src=\"https://cdn3.iconfinder.com/data/icons/sympletts-free-sampler/128/star-512.png\"\r\n                    height=\"30px\"\r\n                    onClick={searchStar}\r\n\r\n                /></td>\r\n                <td><input\r\n                    value=\"3\"\r\n                    type=\"image\"\r\n                    src=\"https://cdn3.iconfinder.com/data/icons/sympletts-free-sampler/128/star-512.png\"\r\n                    height=\"30px\"\r\n                    onClick={searchStar}\r\n                /></td>\r\n                <td><input\r\n                    value=\"4\"\r\n                    type=\"image\"\r\n                    src=\"https://cdn3.iconfinder.com/data/icons/sympletts-free-sampler/128/star-512.png\"\r\n                    height=\"30px\"\r\n                    onClick={searchStar}\r\n                /></td>\r\n                <td><input\r\n                    value=\"5\"\r\n                    type=\"image\"\r\n                    src=\"https://cdn3.iconfinder.com/data/icons/sympletts-free-sampler/128/star-512.png\"\r\n                    height=\"30px\"\r\n                    onClick={searchStar}\r\n                /></td>\r\n            </tr>\r\n        </table>\r\n\r\n\r\n        <Button variant=\"primary\" onClick={handleShow}>\r\n            Add Movie\r\n      </Button>\r\n\r\n        <Modal show={show} onHide={handleClose}>\r\n            <Modal.Header closeButton>\r\n                <Modal.Title>Movie details</Modal.Title>\r\n            </Modal.Header>\r\n            <Modal.Body>\r\n\r\n                <table>\r\n                    <tr>\r\n                        <td>\r\n                            <span>Movie Ttile</span>\r\n                        </td>\r\n                        <td>\r\n                            <input id=\"newTitle\"></input>\r\n                        </td>\r\n                    </tr>\r\n\r\n                    <tr>\r\n                        <td>\r\n                            <span>Image URL</span>\r\n                        </td>\r\n                        <td>\r\n                            <input id=\"newImage\"></input>\r\n                        </td>\r\n                    </tr>\r\n\r\n                    <tr>\r\n                        <td>\r\n                            <span>Movie Description</span>\r\n                        </td>\r\n                        <td>\r\n                            <input id=\"newDescr\"></input>\r\n                        </td>\r\n                    </tr>\r\n\r\n                    <tr>\r\n                        <td>\r\n                            <span>Movie Rating</span>\r\n                        </td>\r\n                        <td>\r\n                            <select id=\"newRating\">\r\n                                <option>1</option>\r\n                                <option>2</option>\r\n                                <option>3</option>\r\n                                <option>4</option>\r\n                                <option>5</option>\r\n                            </select>\r\n                        </td>\r\n                    </tr>\r\n\r\n                </table>\r\n\r\n\r\n\r\n            </Modal.Body>\r\n            <Modal.Footer>\r\n                <Button variant=\"secondary\" onClick={handleClose}>\r\n                    Close\r\n          </Button>\r\n                <Button variant=\"primary\" onClick={AddMovie}>\r\n                    Add Movie\r\n          </Button>\r\n            </Modal.Footer>\r\n        </Modal>\r\n\r\n\r\n        <MovieList movies={\r\n            (empty && !starClicked) ? list : (!empty && !starClicked) ? searchlist : (!empty && starClicked) ? searchlist : searchRate\r\n        } />\r\n    </div>);\r\n}\r\n\r\nexport default MovieCard;","import React from 'react';\nimport './App.css';\nimport MovieCard from './components/MovieCard';\n\nfunction App() {\n  return (\n    <div>\n      <MovieCard />\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}